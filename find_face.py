from PIL import Image
import face_recognition
import cv2
def find_image_face(face):
    add_list = []
    face_position = []
    image = face_recognition.load_image_file(face)
    face_locations = face_recognition.face_locations(image)
    #print("I found {} face(s) in this photograph.".format(len(face_locations)))
    count = 1
    for face_location in face_locations:
        top, right, bottom, left = face_location
        # f = open('./out/%06d'%count, 'w+')
        # f.write("Top: {}, Left: {}, Bottom: {}, Right: {}".format(top, left, bottom, right))
        print(top, right, bottom, left)
        height  = int((bottom - top)/2)
        width = int((right  - left)/2)
        
        image_height,image_width,image_chnnels = image.shape
        if ( top - height > 0 ):
            top -= height
        if ( bottom + height < image_height ):
            bottom += height
        if ( right + width  < image_width ):
            right += width
        if ( left - width > 0 ):
            left -= width
        b,g,r = cv2.split(image[top:bottom, left:right])
        img2 = cv2.merge([r,g,b])
        height, width, channels = img2.shape
        if ( height >= 65 ) & ( width >= 65 ):
            face_position.append(face_location)
            name = ('%06d.jpg' % count) 
            add_list.append(name) 
            #cv2.imwrite('../face_database_builder/users/face_image/%06d.jpg' % count, cv2.GaussianBlur(cv2.medianBlur(img2,5),(5,5),0))
            cv2.imwrite('../face_database_builder/users/face_image/%06d.jpg' % count, img2)
            count += 1;
    print("I found %d face(s) in this photograph."%(int(count)-1))
    return add_list , face_position
